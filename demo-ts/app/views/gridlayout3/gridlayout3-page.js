"use strict";
/*
In NativeScript, a file with the same name as an XML file is known as
a code-behind file. The code-behind is a great place to place your view
logic, and to set up your page’s data binding.
*/
Object.defineProperty(exports, "__esModule", { value: true });
var color_1 = require("color");
var button_1 = require("ui/button");
var view = require("ui/core/view");
var label_1 = require("ui/label");
var grid_layout_1 = require("ui/layouts/grid-layout");
// Event handler for Page "navigatingTo" event attached in main-page.xml
function navigatingTo(args) {
    /*
    This gets a reference this page’s <Page> UI component. You can
    view the API reference of the Page to see what’s available at
    https://docs.nativescript.org/api-reference/classes/_ui_page_.page.html
    */
    var page = args.object;
}
exports.navigatingTo = navigatingTo;
// Event handler for Page "loaded" event attached in main-page.xml
function pageLoaded(args) {
    // Grid wrapper
    var grid = new grid_layout_1.GridLayout();
    grid.backgroundColor = new color_1.Color("green");
    // Create title Label and add is as a child to our grid
    var titleLabel = new label_1.Label();
    titleLabel.text = "NativeScript";
    grid.addChild(titleLabel);
    // Create info Label and add is as a child to our grid
    var infoLabel = new label_1.Label();
    infoLabel.text = "Truly native mobile apps";
    infoLabel.backgroundColor = new color_1.Color("gray");
    grid.addChild(infoLabel);
    // Create the share button and add is as a child to our grid
    var shareButton = new button_1.Button();
    shareButton.text = "Share This!";
    grid.addChild(shareButton);
    // Add Grid Rows as if rows="*, 100, auto" cols="250, *"
    // * - occupy the remaining available space
    grid.addRow(new grid_layout_1.ItemSpec(1, grid_layout_1.GridUnitType.STAR));
    // 100 - fixed column width.
    // If elements in this columns wants to be more - we will coerce their width to the column width.
    grid.addRow(new grid_layout_1.ItemSpec(100, grid_layout_1.GridUnitType.PIXEL));
    // auto - the column width will be the width of the widest element in that column.
    grid.addRow(new grid_layout_1.ItemSpec(1, grid_layout_1.GridUnitType.AUTO));
    grid.addColumn(new grid_layout_1.ItemSpec(250, grid_layout_1.GridUnitType.PIXEL));
    grid.addColumn(new grid_layout_1.ItemSpec(1, grid_layout_1.GridUnitType.STAR));
    // Assign views to their row (if not set default row is 0)
    grid_layout_1.GridLayout.setRow(titleLabel, 0); // titleLabel set to row 0
    grid_layout_1.GridLayout.setRow(infoLabel, 1); // infoLabel set to row 1
    grid_layout_1.GridLayout.setRow(shareButton, 2); // shareButton set to row 2
    // Assign views to their col (if not set default column is 0)
    grid_layout_1.GridLayout.setColumn(titleLabel, 0); // titleLabel set to column 0
    grid_layout_1.GridLayout.setColumn(infoLabel, 0); // infoLabel set to column 0
    grid_layout_1.GridLayout.setColumn(shareButton, 1); // shareButton set to column 1
    // Assign ColumnSpan for views
    grid_layout_1.GridLayout.setColumnSpan(infoLabel, 2); // infoLabel set with columnSpan = 2
    // Add Grid to StackLayout
    var page = args.object;
    var stackLayout = view.getViewById(page, "stackLayout1");
    stackLayout.addChild(grid);
    // Replace Page content by Grid
    //    page.content = grid;
}
exports.pageLoaded = pageLoaded;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ3JpZGxheW91dDMtcGFnZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbImdyaWRsYXlvdXQzLXBhZ2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBOzs7O0VBSUU7O0FBRUYsK0JBQThCO0FBRTlCLG9DQUFtQztBQUNuQyxtQ0FBcUM7QUFDckMsa0NBQWlDO0FBQ2pDLHNEQUE0RTtBQUk1RSx3RUFBd0U7QUFDeEUsc0JBQTZCLElBQWU7SUFDeEM7Ozs7TUFJRTtJQUNGLElBQU0sSUFBSSxHQUFHLElBQUksQ0FBQyxNQUFjLENBQUM7QUFDckMsQ0FBQztBQVBELG9DQU9DO0FBRUQsa0VBQWtFO0FBQ2xFLG9CQUEyQixJQUFlO0lBQ3ZDLGVBQWU7SUFDZixJQUFNLElBQUksR0FBRyxJQUFJLHdCQUFVLEVBQUUsQ0FBQztJQUM5QixJQUFJLENBQUMsZUFBZSxHQUFHLElBQUksYUFBSyxDQUFDLE9BQU8sQ0FBQyxDQUFDO0lBRTFDLHVEQUF1RDtJQUN2RCxJQUFNLFVBQVUsR0FBRyxJQUFJLGFBQUssRUFBRSxDQUFDO0lBQy9CLFVBQVUsQ0FBQyxJQUFJLEdBQUcsY0FBYyxDQUFDO0lBQ2pDLElBQUksQ0FBQyxRQUFRLENBQUMsVUFBVSxDQUFDLENBQUM7SUFFMUIsc0RBQXNEO0lBQ3RELElBQU0sU0FBUyxHQUFHLElBQUksYUFBSyxFQUFFLENBQUM7SUFDOUIsU0FBUyxDQUFDLElBQUksR0FBRywwQkFBMEIsQ0FBQztJQUM1QyxTQUFTLENBQUMsZUFBZSxHQUFHLElBQUksYUFBSyxDQUFDLE1BQU0sQ0FBQyxDQUFDO0lBQzlDLElBQUksQ0FBQyxRQUFRLENBQUMsU0FBUyxDQUFDLENBQUM7SUFFekIsNERBQTREO0lBQzVELElBQU0sV0FBVyxHQUFHLElBQUksZUFBTSxFQUFFLENBQUM7SUFDakMsV0FBVyxDQUFDLElBQUksR0FBRyxhQUFhLENBQUM7SUFDakMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxXQUFXLENBQUMsQ0FBQztJQUUzQix3REFBd0Q7SUFFeEQsMkNBQTJDO0lBQzNDLElBQUksQ0FBQyxNQUFNLENBQUMsSUFBSSxzQkFBUSxDQUFDLENBQUMsRUFBRSwwQkFBWSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUM7SUFFaEQsNEJBQTRCO0lBQzVCLGlHQUFpRztJQUNqRyxJQUFJLENBQUMsTUFBTSxDQUFDLElBQUksc0JBQVEsQ0FBQyxHQUFHLEVBQUUsMEJBQVksQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDO0lBRW5ELGtGQUFrRjtJQUNsRixJQUFJLENBQUMsTUFBTSxDQUFDLElBQUksc0JBQVEsQ0FBQyxDQUFDLEVBQUUsMEJBQVksQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDO0lBRWhELElBQUksQ0FBQyxTQUFTLENBQUMsSUFBSSxzQkFBUSxDQUFDLEdBQUcsRUFBRSwwQkFBWSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUM7SUFDdEQsSUFBSSxDQUFDLFNBQVMsQ0FBQyxJQUFJLHNCQUFRLENBQUMsQ0FBQyxFQUFFLDBCQUFZLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQztJQUVuRCwwREFBMEQ7SUFDMUQsd0JBQVUsQ0FBQyxNQUFNLENBQUMsVUFBVSxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsMEJBQTBCO0lBQzVELHdCQUFVLENBQUMsTUFBTSxDQUFDLFNBQVMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFFLHlCQUF5QjtJQUMzRCx3QkFBVSxDQUFDLE1BQU0sQ0FBQyxXQUFXLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQywyQkFBMkI7SUFFOUQsNkRBQTZEO0lBQzdELHdCQUFVLENBQUMsU0FBUyxDQUFDLFVBQVUsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLDZCQUE2QjtJQUNsRSx3QkFBVSxDQUFDLFNBQVMsQ0FBQyxTQUFTLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBRSw0QkFBNEI7SUFDakUsd0JBQVUsQ0FBQyxTQUFTLENBQUMsV0FBVyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsOEJBQThCO0lBRXBFLDhCQUE4QjtJQUM5Qix3QkFBVSxDQUFDLGFBQWEsQ0FBQyxTQUFTLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxvQ0FBb0M7SUFFNUUsMEJBQTBCO0lBQzFCLElBQU0sSUFBSSxHQUFHLElBQUksQ0FBQyxNQUFjLENBQUM7SUFDakMsSUFBTSxXQUFXLEdBQUcsSUFBSSxDQUFDLFdBQVcsQ0FBQyxJQUFJLEVBQUUsY0FBYyxDQUFnQixDQUFDO0lBQzFFLFdBQVcsQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLENBQUM7SUFFM0IsK0JBQStCO0lBQ2xDLDBCQUEwQjtBQUMxQixDQUFDO0FBeERELGdDQXdEQyIsInNvdXJjZXNDb250ZW50IjpbIi8qXG5JbiBOYXRpdmVTY3JpcHQsIGEgZmlsZSB3aXRoIHRoZSBzYW1lIG5hbWUgYXMgYW4gWE1MIGZpbGUgaXMga25vd24gYXNcbmEgY29kZS1iZWhpbmQgZmlsZS4gVGhlIGNvZGUtYmVoaW5kIGlzIGEgZ3JlYXQgcGxhY2UgdG8gcGxhY2UgeW91ciB2aWV3XG5sb2dpYywgYW5kIHRvIHNldCB1cCB5b3VyIHBhZ2XigJlzIGRhdGEgYmluZGluZy5cbiovXG5cbmltcG9ydCB7IENvbG9yIH0gZnJvbSBcImNvbG9yXCI7XG5pbXBvcnQgeyBFdmVudERhdGEgfSBmcm9tIFwiZGF0YS9vYnNlcnZhYmxlXCI7XG5pbXBvcnQgeyBCdXR0b24gfSBmcm9tIFwidWkvYnV0dG9uXCI7XG5pbXBvcnQgKiBhcyB2aWV3IGZyb20gXCJ1aS9jb3JlL3ZpZXdcIjtcbmltcG9ydCB7IExhYmVsIH0gZnJvbSBcInVpL2xhYmVsXCI7XG5pbXBvcnQgeyBHcmlkTGF5b3V0LCBHcmlkVW5pdFR5cGUsIEl0ZW1TcGVjIH0gZnJvbSBcInVpL2xheW91dHMvZ3JpZC1sYXlvdXRcIjtcbmltcG9ydCB7IFN0YWNrTGF5b3V0IH0gZnJvbSBcInVpL2xheW91dHMvc3RhY2stbGF5b3V0XCI7XG5pbXBvcnQgeyBQYWdlIH0gZnJvbSBcInVpL3BhZ2VcIjtcblxuLy8gRXZlbnQgaGFuZGxlciBmb3IgUGFnZSBcIm5hdmlnYXRpbmdUb1wiIGV2ZW50IGF0dGFjaGVkIGluIG1haW4tcGFnZS54bWxcbmV4cG9ydCBmdW5jdGlvbiBuYXZpZ2F0aW5nVG8oYXJnczogRXZlbnREYXRhKSB7XG4gICAgLypcbiAgICBUaGlzIGdldHMgYSByZWZlcmVuY2UgdGhpcyBwYWdl4oCZcyA8UGFnZT4gVUkgY29tcG9uZW50LiBZb3UgY2FuXG4gICAgdmlldyB0aGUgQVBJIHJlZmVyZW5jZSBvZiB0aGUgUGFnZSB0byBzZWUgd2hhdOKAmXMgYXZhaWxhYmxlIGF0XG4gICAgaHR0cHM6Ly9kb2NzLm5hdGl2ZXNjcmlwdC5vcmcvYXBpLXJlZmVyZW5jZS9jbGFzc2VzL191aV9wYWdlXy5wYWdlLmh0bWxcbiAgICAqL1xuICAgIGNvbnN0IHBhZ2UgPSBhcmdzLm9iamVjdCBhcyBQYWdlO1xufVxuXG4vLyBFdmVudCBoYW5kbGVyIGZvciBQYWdlIFwibG9hZGVkXCIgZXZlbnQgYXR0YWNoZWQgaW4gbWFpbi1wYWdlLnhtbFxuZXhwb3J0IGZ1bmN0aW9uIHBhZ2VMb2FkZWQoYXJnczogRXZlbnREYXRhKSB7XG4gICAvLyBHcmlkIHdyYXBwZXJcbiAgIGNvbnN0IGdyaWQgPSBuZXcgR3JpZExheW91dCgpO1xuICAgZ3JpZC5iYWNrZ3JvdW5kQ29sb3IgPSBuZXcgQ29sb3IoXCJncmVlblwiKTtcblxuICAgLy8gQ3JlYXRlIHRpdGxlIExhYmVsIGFuZCBhZGQgaXMgYXMgYSBjaGlsZCB0byBvdXIgZ3JpZFxuICAgY29uc3QgdGl0bGVMYWJlbCA9IG5ldyBMYWJlbCgpO1xuICAgdGl0bGVMYWJlbC50ZXh0ID0gXCJOYXRpdmVTY3JpcHRcIjtcbiAgIGdyaWQuYWRkQ2hpbGQodGl0bGVMYWJlbCk7XG5cbiAgIC8vIENyZWF0ZSBpbmZvIExhYmVsIGFuZCBhZGQgaXMgYXMgYSBjaGlsZCB0byBvdXIgZ3JpZFxuICAgY29uc3QgaW5mb0xhYmVsID0gbmV3IExhYmVsKCk7XG4gICBpbmZvTGFiZWwudGV4dCA9IFwiVHJ1bHkgbmF0aXZlIG1vYmlsZSBhcHBzXCI7XG4gICBpbmZvTGFiZWwuYmFja2dyb3VuZENvbG9yID0gbmV3IENvbG9yKFwiZ3JheVwiKTtcbiAgIGdyaWQuYWRkQ2hpbGQoaW5mb0xhYmVsKTtcblxuICAgLy8gQ3JlYXRlIHRoZSBzaGFyZSBidXR0b24gYW5kIGFkZCBpcyBhcyBhIGNoaWxkIHRvIG91ciBncmlkXG4gICBjb25zdCBzaGFyZUJ1dHRvbiA9IG5ldyBCdXR0b24oKTtcbiAgIHNoYXJlQnV0dG9uLnRleHQgPSBcIlNoYXJlIFRoaXMhXCI7XG4gICBncmlkLmFkZENoaWxkKHNoYXJlQnV0dG9uKTtcblxuICAgLy8gQWRkIEdyaWQgUm93cyBhcyBpZiByb3dzPVwiKiwgMTAwLCBhdXRvXCIgY29scz1cIjI1MCwgKlwiXG5cbiAgIC8vICogLSBvY2N1cHkgdGhlIHJlbWFpbmluZyBhdmFpbGFibGUgc3BhY2VcbiAgIGdyaWQuYWRkUm93KG5ldyBJdGVtU3BlYygxLCBHcmlkVW5pdFR5cGUuU1RBUikpO1xuXG4gICAvLyAxMDAgLSBmaXhlZCBjb2x1bW4gd2lkdGguXG4gICAvLyBJZiBlbGVtZW50cyBpbiB0aGlzIGNvbHVtbnMgd2FudHMgdG8gYmUgbW9yZSAtIHdlIHdpbGwgY29lcmNlIHRoZWlyIHdpZHRoIHRvIHRoZSBjb2x1bW4gd2lkdGguXG4gICBncmlkLmFkZFJvdyhuZXcgSXRlbVNwZWMoMTAwLCBHcmlkVW5pdFR5cGUuUElYRUwpKTtcblxuICAgLy8gYXV0byAtIHRoZSBjb2x1bW4gd2lkdGggd2lsbCBiZSB0aGUgd2lkdGggb2YgdGhlIHdpZGVzdCBlbGVtZW50IGluIHRoYXQgY29sdW1uLlxuICAgZ3JpZC5hZGRSb3cobmV3IEl0ZW1TcGVjKDEsIEdyaWRVbml0VHlwZS5BVVRPKSk7XG5cbiAgIGdyaWQuYWRkQ29sdW1uKG5ldyBJdGVtU3BlYygyNTAsIEdyaWRVbml0VHlwZS5QSVhFTCkpO1xuICAgZ3JpZC5hZGRDb2x1bW4obmV3IEl0ZW1TcGVjKDEsIEdyaWRVbml0VHlwZS5TVEFSKSk7XG5cbiAgIC8vIEFzc2lnbiB2aWV3cyB0byB0aGVpciByb3cgKGlmIG5vdCBzZXQgZGVmYXVsdCByb3cgaXMgMClcbiAgIEdyaWRMYXlvdXQuc2V0Um93KHRpdGxlTGFiZWwsIDApOyAvLyB0aXRsZUxhYmVsIHNldCB0byByb3cgMFxuICAgR3JpZExheW91dC5zZXRSb3coaW5mb0xhYmVsLCAxKTsgIC8vIGluZm9MYWJlbCBzZXQgdG8gcm93IDFcbiAgIEdyaWRMYXlvdXQuc2V0Um93KHNoYXJlQnV0dG9uLCAyKTsgLy8gc2hhcmVCdXR0b24gc2V0IHRvIHJvdyAyXG5cbiAgIC8vIEFzc2lnbiB2aWV3cyB0byB0aGVpciBjb2wgKGlmIG5vdCBzZXQgZGVmYXVsdCBjb2x1bW4gaXMgMClcbiAgIEdyaWRMYXlvdXQuc2V0Q29sdW1uKHRpdGxlTGFiZWwsIDApOyAvLyB0aXRsZUxhYmVsIHNldCB0byBjb2x1bW4gMFxuICAgR3JpZExheW91dC5zZXRDb2x1bW4oaW5mb0xhYmVsLCAwKTsgIC8vIGluZm9MYWJlbCBzZXQgdG8gY29sdW1uIDBcbiAgIEdyaWRMYXlvdXQuc2V0Q29sdW1uKHNoYXJlQnV0dG9uLCAxKTsgLy8gc2hhcmVCdXR0b24gc2V0IHRvIGNvbHVtbiAxXG5cbiAgIC8vIEFzc2lnbiBDb2x1bW5TcGFuIGZvciB2aWV3c1xuICAgR3JpZExheW91dC5zZXRDb2x1bW5TcGFuKGluZm9MYWJlbCwgMik7IC8vIGluZm9MYWJlbCBzZXQgd2l0aCBjb2x1bW5TcGFuID0gMlxuXG4gICAvLyBBZGQgR3JpZCB0byBTdGFja0xheW91dFxuICAgY29uc3QgcGFnZSA9IGFyZ3Mub2JqZWN0IGFzIFBhZ2U7XG4gICBjb25zdCBzdGFja0xheW91dCA9IHZpZXcuZ2V0Vmlld0J5SWQocGFnZSwgXCJzdGFja0xheW91dDFcIikgYXMgU3RhY2tMYXlvdXQ7XG4gICBzdGFja0xheW91dC5hZGRDaGlsZChncmlkKTtcblxuICAgLy8gUmVwbGFjZSBQYWdlIGNvbnRlbnQgYnkgR3JpZFxuLy8gICAgcGFnZS5jb250ZW50ID0gZ3JpZDtcbn0iXX0=